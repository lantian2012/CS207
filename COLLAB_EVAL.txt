Resouces:
	Viewer extension: Viewer_Extension.hpp
	Collision Detection: CollisionDetector.hpp and all headers files referenced by CollisionDetector.hpp.
	Shallow Water: Structs defined in meshed_mass_spring.cpp in Combine2 are copied from the shallow water extension.

Code Review and Evaluation:

Viewer extension:
The viewer extension is straightforward to understand and use: we replace the new SDLViewer.hpp with our original one, add the Viewer_Extension.hpp to our working directory, and create the our own customized listener in the main function and add the reference of the listener objects into the viewer. After these simple steps, we can control the movements, color, and speed of object by mouse and keyboard.


Collision Detection: 
The collision detector is very well designed. The interface is very easy to use and well documented. I do not need to change my interface to adapt to the collision detector. 
I hope they will add an interface to get the number of nodes collided without iterating through all collided nodes. Meanwhile, there seems to be two bugs in the Morton code. When the object is small (with the diameter of less than 0.4), collision cannot be detected. When the object is too big, an assertion failure will cause to crash of the program. 


Shallow Water: 
The code provided is very well documented, and their interface matches exactly as our interface. We are able to add a second mesh and its associated forces without effort. It seems that their physical model is very robust. 
I hope they will be albe to provide files in a header file, so we do not need to copy and paste code. 

